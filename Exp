import React, { useState } from "react";
import ellipseImage from "../assets/images/Ellipse 34.jpg";
import vectorImage from "../assets/images/Vector 60.jpg";

const AddExperience = () => {
  const [selectedStartMonth, setSelectedStartMonth] = useState("");
  const [selectedStartYear, setSelectedStartYear] = useState("");
  const [selectedEndMonth, setSelectedEndMonth] = useState("");
  const [selectedEndYear, setSelectedEndYear] = useState("");
  const [companyName, setCompanyName] = useState("");
  const [jobTitle, setJobTitle] = useState("");
  const [employmentType, setEmploymentType] = useState("");
  const [selectedCountry, setSelectedCountry] = useState("");
  const [skillInput, setSkillInput] = useState("");
  const [keySkills, setKeySkills] = useState([]);

  const months = [
    "January",
    "February",
    "March",
    "April",
    "May",
    "June",
    "July",
    "August",
    "September",
    "October",
    "November",
    "December",
  ];

  const employmentTypes = [
    "Full Time",
    "Part Time",
    "Remote",
    "Work From Home",
  ];

  const years = [];
  const currentYear = new Date().getFullYear();
  for (let year = 2000; year <= currentYear; year++) {
    years.push(year);
  }

  const countries = [
    "United States",
    "United Kingdom",
    "India",
    "Canada",
    "Australia",
    "Germany",
    "France",
    "Brazil",
    "Japan",
    "China",
    "South Africa",
    "Mexico",
    "Italy",
    "Spain",
    "Russia",
    "Netherlands",
    "Switzerland",
    "Singapore",
    "South Korea",
    "New Zealand",
  ];

  const addSkill = () => {
    if (skillInput.trim() !== "") {
      setKeySkills([...keySkills, skillInput.trim()]);
      setSkillInput("");
    }
  };

  const removeSkill = (skill) => {
    setKeySkills(keySkills.filter((s) => s !== skill));
  };

  return (
    <div className="relative min-h-screen flex flex-col">
      <h1 className="text-2xl font-bold text-[#05445E] p-4">NGHR</h1>
      <div
        className="relative flex flex-row items-center justify-between flex-grow px-10 bg-cover bg-no-repeat"
        style={{
          backgroundImage: `url(${vectorImage})`,
          backgroundPosition: "100% center",
          backgroundSize: "50%",
        }}
      >
        <div
          className="absolute left-0 top-0 w-1/2 h-full bg-contain bg-no-repeat"
          style={{
            backgroundImage: `url(${ellipseImage})`,
            backgroundSize: "cover",
          }}
        ></div>

        <div className="relative z-10 w-80 max-w-xl text-left ml-20">
          <p className="text-3xl font-semibold text-[#05445E] mb-4">
            Step 4 out of 5
          </p>
          <p className="text-2xl mt-8 text-[#05445E] font-bold mb-4">
            Fill in the details to help us build your profile and land perfect
            job opportunities.
          </p>
          <p className="font-bold text-[#05445E]">Fill up Employment details</p>
          <p className="text-[#05445E] mt-2">
            Add your experience to your profile to help us match you with the
            right opportunities.
          </p>

          <p className="font-bold text-[#05445E] mt-4">Company 1</p>

          {/* Start Date Section */}
          <p className="font-bold text-[#05445E] mt-4">Start Date *</p>
          <div className="flex gap-4 mt-2">
            <select
              className="border border-gray-300 rounded-md p-2 text-[#05445E]"
              value={selectedStartMonth}
              onChange={(e) => setSelectedStartMonth(e.target.value)}
            >
              <option value="">Select Month</option>
              {months.map((month, index) => (
                <option key={index} value={month}>
                  {month}
                </option>
              ))}
            </select>

            <select
              className="border border-gray-300 rounded-md p-2 text-[#05445E]"
              value={selectedStartYear}
              onChange={(e) => setSelectedStartYear(e.target.value)}
            >
              <option value="">Select Year</option>
              {years.map((year, index) => (
                <option key={index} value={year}>
                  {year}
                </option>
              ))}
            </select>
          </div>

          {/* End Date Section */}
          <p className="font-bold text-[#05445E] mt-4">End Date *</p>
          <div className="flex gap-4 mt-2">
            <select
              className="border border-gray-300 rounded-md p-2 text-[#05445E]"
              value={selectedEndMonth}
              onChange={(e) => setSelectedEndMonth(e.target.value)}
            >
              <option value="">Select Month</option>
              {months.map((month, index) => (
                <option key={index} value={month}>
                  {month}
                </option>
              ))}
            </select>

            <select
              className="border border-gray-300 rounded-md p-2 text-[#05445E]"
              value={selectedEndYear}
              onChange={(e) => setSelectedEndYear(e.target.value)}
            >
              <option value="">Select Year</option>
              {years.map((year, index) => (
                <option key={index} value={year}>
                  {year}
                </option>
              ))}
            </select>
          </div>

          {/* Company Name Input - Moved to the End */}
          <p className="font-bold text-[#05445E] mt-4">Company Name *</p>
          <input
            type="text"
            placeholder="Eg: Infosys"
            className="border border-gray-300 rounded-md p-2 w-full mt-2 text-[#05445E]"
            value={companyName}
            onChange={(e) => setCompanyName(e.target.value)}
          />

          {/* Job Title Input - Added at the Last */}
          <p className="font-bold text-[#05445E] mt-4">Title *</p>
          <input
            type="text"
            placeholder="Eg: Ex Senior UI/UX Designer"
            className="border border-gray-300 rounded-md p-2 w-full mt-2 text-[#05445E]"
            value={jobTitle}
            onChange={(e) => setJobTitle(e.target.value)}
          />

          {/* Employment Type Dropdown - Added at the Last */}
          <p className="font-bold text-[#05445E] mt-4">Employment Type *</p>
          <select
            className="border border-gray-300 rounded-md p-2 w-full mt-2 text-[#05445E]"
            value={employmentType}
            onChange={(e) => setEmploymentType(e.target.value)}
          >
            <option value="">Select Employment Type</option>
            {employmentTypes.map((type, index) => (
              <option key={index} value={type}>
                {type}
              </option>
            ))}
          </select>

          {/* Country Dropdown - Added at the Last */}
          <p className="font-bold text-[#05445E] mt-4">Country *</p>
          <select
            className="border border-gray-300 rounded-md p-2 w-full mt-2 text-[#05445E]"
            value={selectedCountry}
            onChange={(e) => setSelectedCountry(e.target.value)}
          >
            <option value="">Select Country</option>
            {countries.map((country, index) => (
              <option key={index} value={country}>
                {country}
              </option>
            ))}
          </select>

          {/* Key Skills Section */}
          <p className="font-bold text-[#05445E] mt-4">Key Skills *</p>
          <div className="border p-2 rounded-lg w-full mt-2 border-[#BEBEBE] flex flex-wrap gap-2 items-center">
            {keySkills.map((skill, index) => (
              <span
                key={index}
                className="bg-[#00A7AC] text-white px-3 py-1 rounded-lg flex items-center"
              >
                {skill}
                <button
                  onClick={() => removeSkill(skill)}
                  className="ml-2 text-white font-bold"
                >
                  Ã—
                </button>
              </span>
            ))}
          </div>

          {/* Input to Add New Skill */}
          <div className="flex gap-2 mt-3">
            <input
              type="text"
              placeholder="Add a skill"
              className="border border-gray-300 rounded-md p-2 w-full text-[#05445E]"
              value={skillInput}
              onChange={(e) => setSkillInput(e.target.value)}
            />
            <button
              onClick={addSkill}
              className="bg-[#00A7AC] text-white px-4 py-2 rounded-md"
            >
              Add
            </button>
          </div>
        </div>
      </div>
    </div>
  );
};

export default AddExperience;
